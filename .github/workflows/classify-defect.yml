name: Classify Defect

on:
  issues:
    types:
      - labeled

jobs:
  classify-defect:
    name: Classify Defect with Labels
    if: contains(github.event.label.name, 'defect') || contains(github.event.label.name, 'bug')
    runs-on: ubuntu-latest
    steps:
      - name: Get issue details
        id: issue-details
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue;
            
            // Extract issue title and body
            const title = issue.title.toLowerCase();
            const body = issue.body ? issue.body.toLowerCase() : '';
            const combined = title + ' ' + body;
            
            // Define classification patterns
            const classifications = [
              { 
                label: 'ui', 
                patterns: ['ui', 'user interface', 'button', 'display', 'layout', 'visual', 'css', 'style']
              },
              { 
                label: 'performance', 
                patterns: ['slow', 'performance', 'timeout', 'lag', 'speed', 'fast', 'response time']
              },
              { 
                label: 'data', 
                patterns: ['data', 'database', 'mongodb', 'information', 'record', 'storage']
              },
              { 
                label: 'api', 
                patterns: ['api', 'endpoint', 'request', 'response', 'server', 'http', 'rest']
              },
              { 
                label: 'security', 
                patterns: ['security', 'auth', 'authentication', 'permission', 'access']
              },
              { 
                label: 'functional', 
                patterns: ['function', 'behavior', 'not working', 'broken', 'error', 'incorrect']
              },
              { 
                label: 'crash', 
                patterns: ['crash', 'exception', 'fatal', 'failure', 'stopped working']
              },
              { 
                label: 'rolling-stock', 
                patterns: ['rolling stock', 'rail car', 'train car', 'car', 'locomotive']
              },
              { 
                label: 'industry', 
                patterns: ['industry', 'industrial']
              },
              { 
                label: 'location', 
                patterns: ['location', 'station', 'yard', 'track']
              }
            ];
            
            // Determine which labels to apply
            const labelsToApply = classifications
              .filter(classification => 
                classification.patterns.some(pattern => combined.includes(pattern))
              )
              .map(classification => classification.label);
            
            // Set a default severity based on content analysis
            let severity = 'severity: normal';
            if (combined.includes('crash') || combined.includes('broken') || 
                combined.includes('unusable') || combined.includes('critical')) {
              severity = 'severity: critical';
            } else if (combined.includes('important') || combined.includes('major')) {
              severity = 'severity: major';
            } else if (combined.includes('minor') || combined.includes('cosmetic')) {
              severity = 'severity: minor';
            }
            
            labelsToApply.push(severity);
            
            // Set to output for use in next step
            core.setOutput('labels-to-apply', JSON.stringify(labelsToApply));
            
      - name: Apply classification labels
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const labelsToApply = JSON.parse('${{ steps.issue-details.outputs.labels-to-apply }}');
            
            if (labelsToApply.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                labels: labelsToApply
              });
              
              console.log(`Applied labels: ${labelsToApply.join(', ')}`);
            } else {
              console.log('No classification labels identified for this issue');
            }
      
      - name: Add classification comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const labelsToApply = JSON.parse('${{ steps.issue-details.outputs.labels-to-apply }}');
            
            if (labelsToApply.length > 0) {
              const commentText = `This defect has been automatically classified with the following labels: \`${labelsToApply.join('`, `')}\`.\n\nIf these classifications are incorrect, please adjust the labels manually.`;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: commentText
              });
            } 