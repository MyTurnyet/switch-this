name: Run Tests

on:
  # Run on push to any branch
  push:
    branches: ['**']
  
  # Allow manual triggering from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write # This is needed to push to branches
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Verify lucide-react installation
        run: npm install lucide-react --no-save
      
      - name: Build project
        run: npm run build
      
      - name: Run linting
        run: npm run lint
      
      - name: Run tests with coverage
        run: npm run test:ci
      
      - name: Generate coverage report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/cobertura-coverage.xml
          badge: true
          format: markdown
          output: both
      
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: test-coverage
          recreate: true
          path: code-coverage-results.md
      
      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
      
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage/
          retention-days: 14
      
      - name: Create Coverage Summary JSON
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir -p coverage-summary
          # Extract coverage percentage from cobertura XML using grep and awk
          LINE_RATE=$(grep -o 'line-rate="[0-9.]*"' coverage/cobertura-coverage.xml | head -1 | cut -d'"' -f2)
          BRANCH_RATE=$(grep -o 'branch-rate="[0-9.]*"' coverage/cobertura-coverage.xml | head -1 | cut -d'"' -f2)
          
          # Convert to percentage
          LINE_PCT=$(awk "BEGIN {printf \"%.2f\", $LINE_RATE * 100}")
          BRANCH_PCT=$(awk "BEGIN {printf \"%.2f\", $BRANCH_RATE * 100}")
          
          # Calculate actual covered values (without leading zeros)
          LINE_COVERED=$(awk "BEGIN {printf \"%.0f\", $LINE_RATE * 1000}")
          BRANCH_COVERED=$(awk "BEGIN {printf \"%.0f\", $BRANCH_RATE * 500}")
          
          # Create JSON file
          cat > coverage-summary/coverage.json << EOF
          {
            "total": {
              "lines": { "total": 1000, "covered": $LINE_COVERED, "skipped": 0, "pct": $LINE_PCT },
              "statements": { "total": 1000, "covered": $LINE_COVERED, "skipped": 0, "pct": $LINE_PCT },
              "functions": { "total": 500, "covered": $LINE_COVERED, "skipped": 0, "pct": $LINE_PCT },
              "branches": { "total": 500, "covered": $BRANCH_COVERED, "skipped": 0, "pct": $BRANCH_PCT }
            }
          }
          EOF
          
          cat coverage-summary/coverage.json
      
      - name: Deploy Coverage Summary
        if: github.ref == 'refs/heads/main'
        run: |
          cd coverage-summary
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git init
          git add .
          git commit -m "Update coverage summary"
          git push --force https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:coverage-summary 